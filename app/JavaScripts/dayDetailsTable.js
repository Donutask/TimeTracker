"use strict";const dayDetailsHeading=document.getElementById("detailed-day-data-heading"),noDetailsMessage=document.getElementById("no-details-availible"),noDateSelectedMessage=document.getElementById("no-date-selected"),addTimeButton=document.getElementById("add-button"),addTimeDialog=document.getElementById("add-time-modal"),addTimeForm=document.getElementById("add-time-form"),addTimeStartInput=document.getElementById("add-time-input-start"),addTimeEndInput=document.getElementById("add-time-input-end"),addTimeDurationDisplay=document.getElementById("add-time-duration"),dayDetailsBody=document.getElementById("day-details-body"),dayDetailsTable=document.getElementById("detailed-day-data"),dayDetailRowTemplate=document.getElementById("day-details-template");let showingDetailsForDay;function ShowDayDetails(e){showingDetailsForDay=e,noDateSelectedMessage.style.display="none",addTimeButton.style.display="inline",dayDetailsHeading.textContent=`Details for ${e} ${months[currentMonth]}`;let t=mainData.GetAllSpansForDate(currentYear,currentMonth,e);if(null!=t){dayDetailsTable.style.display="table",noDetailsMessage.style.display="none",dayDetailsBody.textContent="";for(let e=0;e<t.length;e++){const n=t[e],a=dayDetailRowTemplate.content.cloneNode(!0),d=a.querySelector("#edit-time-input-start");d.id="edit-time-input-start-"+e,d.value=n.start.FormatForTimeInput();const i=a.querySelector("#edit-time-input-end");i.value=n.end.FormatForTimeInput(),i.id="edit-time-input-end-"+e;const l=a.querySelector("#duration");l.id="duration-"+e;const o=n.GetMinutes();l.textContent=DateTime.formatHoursMinutes(o),o<=0&&l.classList.add("invalid-time");const s=a.querySelector("#edit-button");s.id="edit-button-"+e,s.addEventListener("click",(function(){BeginEdit(e,n)}));const m=a.querySelector("#delete-button");m.id="delete-button-"+e,m.addEventListener("click",(function(){(o<1||confirm("Delete?"))&&(mainData.Remove(n),UpdateCalendarAndDetails(),SaveData())}));a.querySelector("#apply-edit-button").id="apply-edit-button-"+e;a.querySelector("#cancel-edit-button").id="cancel-edit-button-"+e;a.querySelector("#management-actions").id="management-actions-"+e,dayDetailsBody.appendChild(a)}}else dayDetailsTable.style.display="none",null==mainData||null==mainData.timespans||mainData.timespans.length<=0||(noDetailsMessage.style.display="block")}function ShowNoDetails(){noDetailsMessage.style.display="none",noDateSelectedMessage.style.display="block",addTimeButton.style.display="none",dayDetailsTable.style.display="none",dayDetailsHeading.textContent="",null!=previouslySelectedDate&&previouslySelectedDate.classList.remove("selected-date"),showingDetailsForDay=null}function BeginEdit(e,t){const n=document.getElementById("edit-time-input-start-"+e),a=document.getElementById("edit-time-input-end-"+e),d=document.getElementById("duration-"+e),i=document.getElementById("cancel-edit-button-"+e),l=document.getElementById("apply-edit-button-"+e),o=document.getElementById("management-actions-"+e);null!=n&&null!=a&&null!=i&&null!=l&&null!=o?(n.disabled=!1,a.disabled=!1,i.style.display="inline",l.style.display="inline",i.addEventListener("click",(function(){CancelEdit(e,t)})),l.addEventListener("click",(function(){ApplyEdit(e,t)})),n.addEventListener("input",(function(){OnTimeInputShowNewDuration(n,a,d,t)})),a.addEventListener("input",(function(){OnTimeInputShowNewDuration(n,a,d,t)})),o.style.display="none"):console.log("Something is null")}function OnTimeInputShowNewDuration(e,t,n,a){let d=a.start.Clone(),i=a.end.Clone();d.ChangeHoursMinutesFromTimeInputString(e.value),i.ChangeHoursMinutesFromTimeInputString(t.value);let l=DateTime.DifferenceInMinutes(d,i);n.textContent=DateTime.formatHoursMinutes(l),l<=0?n.classList.add("invalid-time"):n.classList.remove("invalid-time")}function ApplyEdit(e,t){const n=document.getElementById("edit-time-input-start-"+e),a=document.getElementById("edit-time-input-end-"+e);let d=t.start.Clone(),i=t.end.Clone();d.ChangeHoursMinutesFromTimeInputString(n.value),i.ChangeHoursMinutesFromTimeInputString(a.value);const l=DateTime.DifferenceInMinutes(d,i);0!=l?l<0?alert("Duration cannot be negative."):(t.start=d,t.end=i,SaveData(),EndEdit(e),RenderCurrentCalendar(),noDetailsMessage.textContent=""):alert("Start and end times cannot be the same.")}function CancelEdit(e,t){const n=document.getElementById("edit-time-input-start-"+e),a=document.getElementById("edit-time-input-end-"+e),d=document.getElementById("duration-"+e);n.value=t.start.FormatForTimeInput(),a.value=t.end.FormatForTimeInput();const i=t.GetMinutes();d.textContent=DateTime.formatHoursMinutes(i),i<=0?d.classList.add("invalid-time"):d.classList.remove("invalid-time"),EndEdit(e)}function EndEdit(e){const t=document.getElementById("edit-time-input-start-"+e),n=document.getElementById("edit-time-input-end-"+e),a=document.getElementById("management-actions-"+e),d=document.getElementById("cancel-edit-button-"+e),i=document.getElementById("apply-edit-button-"+e);t.disabled=!0,n.disabled=!0,d.style.display="none",i.style.display="none",a.style.display="block"}let addTimeStart=DateTime.NullDate(),addTimeEnd=DateTime.NullDate();function BeginAddTime(){if(null==showingDetailsForDay)throw"Cannot add time, no day selected";addTimeStart=new DateTime(currentYear,currentMonth,showingDetailsForDay,0,0),addTimeEnd=new DateTime(currentYear,currentMonth,showingDetailsForDay,0,0),addTimeStartInput.value="",addTimeEndInput.value="",addTimeDurationDisplay.textContent="",addTimeDialog.showModal(),document.body.classList.add("stop-scroll")}function SubmitAddTime(e){e.preventDefault(),mainData.Add(new Timespan(addTimeStart,addTimeEnd)),SaveData(),UpdateCalendarAndDetails(),CloseAddTime()}function CloseAddTime(){addTimeDialog.close(),document.body.classList.remove("stop-scroll")}function UpdateAddTimeDuration(){if(addTimeStart.ChangeHoursMinutesFromTimeInputString(addTimeStartInput.value),addTimeEnd.ChangeHoursMinutesFromTimeInputString(addTimeEndInput.value),""!=addTimeStartInput.value&&""!=addTimeEndInput.value){const e=new Timespan(addTimeStart,addTimeEnd).GetMinutes();addTimeDurationDisplay.innerHTML=`Duration: <b class=${e>0?"":"invalid-time"}>${DateTime.formatHoursMinutes(e)}</b>`,0==e?addTimeStartInput.setCustomValidity("Start and end time cannot be the same."):e<0?addTimeStartInput.setCustomValidity("Start time must be before end time."):addTimeStartInput.setCustomValidity("")}}addTimeForm.addEventListener("submit",SubmitAddTime),addTimeStartInput.addEventListener("change",UpdateAddTimeDuration),addTimeEndInput.addEventListener("change",UpdateAddTimeDuration),ShowNoDetails();